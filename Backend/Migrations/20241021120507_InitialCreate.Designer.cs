// <auto-generated />
using System;
using GymSystem.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GymSystem.Migrations
{
    [DbContext(typeof(GymSystemContext))]
    [Migration("20241021120507_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GymSystem.Models.Attendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ChekinTime")
                        .HasColumnType("datetime")
                        .HasColumnName("chekinTime");

                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasColumnName("memberId");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.ToTable("attendances", (string)null);
                });

            modelBuilder.Entity("GymSystem.Models.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Addresse")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("addresse");

                    b.Property<string>("AspNetUserId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("aspNetUserId");

                    b.Property<DateOnly>("Birthday")
                        .HasColumnType("date")
                        .HasColumnName("birthday");

                    b.Property<string>("IdNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("idNumber")
                        .IsFixedLength();

                    b.Property<DateOnly>("JoinDate")
                        .HasColumnType("date")
                        .HasColumnName("joinDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<int>("Phone")
                        .HasColumnType("int")
                        .HasColumnName("phone");

                    b.HasKey("Id")
                        .HasName("PK_Member");

                    b.HasIndex(new[] { "AspNetUserId" }, "IX_Members_aspNetUserId");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("GymSystem.Models.Plan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AspNetUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("aspNetUser");

                    b.Property<int>("DurationInMonths")
                        .HasColumnType("int")
                        .HasColumnName("durationInMonths");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<int>("Price")
                        .HasColumnType("int")
                        .HasColumnName("price");

                    b.HasKey("Id");

                    b.ToTable("plans", (string)null);
                });

            modelBuilder.Entity("GymSystem.Models.Subscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date")
                        .HasColumnName("endDate");

                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasColumnName("memberId");

                    b.Property<int>("PlanId")
                        .HasColumnType("int")
                        .HasColumnName("planId");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("startDate");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.HasIndex("PlanId");

                    b.ToTable("subscriptions", (string)null);
                });

            modelBuilder.Entity("GymSystem.Models.Attendance", b =>
                {
                    b.HasOne("GymSystem.Models.Member", "Member")
                        .WithMany("Attendances")
                        .HasForeignKey("MemberId")
                        .IsRequired()
                        .HasConstraintName("FK_attendances_Members");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("GymSystem.Models.Subscription", b =>
                {
                    b.HasOne("GymSystem.Models.Member", "Member")
                        .WithMany("Subscriptions")
                        .HasForeignKey("MemberId")
                        .IsRequired()
                        .HasConstraintName("FK_subscriptions_Members");

                    b.HasOne("GymSystem.Models.Plan", "Plan")
                        .WithMany("Subscriptions")
                        .HasForeignKey("PlanId")
                        .IsRequired()
                        .HasConstraintName("FK_subscriptions_plans");

                    b.Navigation("Member");

                    b.Navigation("Plan");
                });

            modelBuilder.Entity("GymSystem.Models.Member", b =>
                {
                    b.Navigation("Attendances");

                    b.Navigation("Subscriptions");
                });

            modelBuilder.Entity("GymSystem.Models.Plan", b =>
                {
                    b.Navigation("Subscriptions");
                });
#pragma warning restore 612, 618
        }
    }
}
